/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Kudos, KudosInterface } from "../Kudos";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "KudoSent",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "page",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pageSize",
            type: "uint256",
          },
        ],
        internalType: "struct Kudos.GetKudosParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "getKudosReceived",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "string",
                name: "message",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
              },
            ],
            internalType: "struct Kudos.Kudo[]",
            name: "kudos",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "currentPage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pageSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPages",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalItems",
            type: "uint256",
          },
        ],
        internalType: "struct Kudos.PaginatedKudos",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getKudosReceivedCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "page",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pageSize",
            type: "uint256",
          },
        ],
        internalType: "struct Kudos.GetKudosParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "getKudosSent",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "string",
                name: "message",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
              },
            ],
            internalType: "struct Kudos.Kudo[]",
            name: "kudos",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "currentPage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pageSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPages",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalItems",
            type: "uint256",
          },
        ],
        internalType: "struct Kudos.PaginatedKudos",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getKudosSentCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "string",
            name: "message",
            type: "string",
          },
        ],
        internalType: "struct Kudos.SendKudoParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "sendKudo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506118e4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631307ce1e1461005c57806315ba315e1461007a5780633ca1bffa1461009657806388f4f91e146100c6578063fdcdca4b146100e4575b600080fd5b610064610114565b6040516100719190610df6565b60405180910390f35b610094600480360381019061008f9190610e3f565b61015d565b005b6100b060048036038101906100ab9190610ea7565b6105f9565b6040516100bd919061114f565b60405180910390f35b6100ce610984565b6040516100db9190610df6565b60405180910390f35b6100fe60048036038101906100f99190610ea7565b6109ce565b60405161010b919061114f565b60405180910390f35b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905090565b600073ffffffffffffffffffffffffffffffffffffffff16816000016020810190610188919061119d565b73ffffffffffffffffffffffffffffffffffffffff16036101de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d590611227565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16816000016020810190610208919061119d565b73ffffffffffffffffffffffffffffffffffffffff160361025e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025590611293565b60405180910390fd5b600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183600001602081019061029a919061119d565b73ffffffffffffffffffffffffffffffffffffffff1681526020018380602001906102c591906112c2565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020014281525090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201908161041e9190611560565b5060608201518160030155505060016000836000016020810190610442919061119d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190816105499190611560565b506060820151816003015550506002600081548092919061056990611661565b9190505550816000016020810190610581919061119d565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ff7523bae331ba4dc60407ebba6713dc29eea38c08ca55b6feabea3cc8939a0d48480602001906105df91906112c2565b6040516105ed9291906116e5565b60405180910390a35050565b610601610d5a565b6000826020013511610648576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063f90611755565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000818054905090506000846020013560018660200135846106ac9190611775565b6106b691906117a9565b6106c0919061180c565b90506000856000013590508181106106f257600082116106e15760006106ef565b6001826106ee91906117a9565b5b90505b6000866020013582610704919061183d565b905060008760200135826107189190611775565b905084811115610726578490505b6000828261073491906117a9565b905060008167ffffffffffffffff81111561075257610751611325565b5b60405190808252806020026020018201604052801561078b57816020015b610778610d89565b8152602001906001900390816107705790505b50905060005b82811015610949578881866107a69190611775565b815481106107b7576107b661187f565b5b90600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461088c90611383565b80601f01602080910402602001604051908101604052809291908181526020018280546108b890611383565b80156109055780601f106108da57610100808354040283529160200191610905565b820191906000526020600020905b8154815290600101906020018083116108e857829003601f168201915b5050505050815260200160038201548152505082828151811061092b5761092a61187f565b5b6020026020010181905250808061094190611661565b915050610791565b506040518060a001604052808281526020018681526020018b6020013581526020018781526020018881525098505050505050505050919050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905090565b6109d6610d5a565b6000826020013511610a1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1490611755565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081805490509050600084602001356001866020013584610a829190611775565b610a8c91906117a9565b610a96919061180c565b9050600085600001359050818110610ac85760008211610ab7576000610ac5565b600182610ac491906117a9565b5b90505b6000866020013582610ada919061183d565b90506000876020013582610aee9190611775565b905084811115610afc578490505b60008282610b0a91906117a9565b905060008167ffffffffffffffff811115610b2857610b27611325565b5b604051908082528060200260200182016040528015610b6157816020015b610b4e610d89565b815260200190600190039081610b465790505b50905060005b82811015610d1f57888186610b7c9190611775565b81548110610b8d57610b8c61187f565b5b90600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054610c6290611383565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8e90611383565b8015610cdb5780601f10610cb057610100808354040283529160200191610cdb565b820191906000526020600020905b815481529060010190602001808311610cbe57829003601f168201915b50505050508152602001600382015481525050828281518110610d0157610d0061187f565b5b60200260200101819052508080610d1790611661565b915050610b67565b506040518060a001604052808281526020018681526020018b6020013581526020018781526020018881525098505050505050505050919050565b6040518060a0016040528060608152602001600081526020016000815260200160008152602001600081525090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600081525090565b6000819050919050565b610df081610ddd565b82525050565b6000602082019050610e0b6000830184610de7565b92915050565b600080fd5b600080fd5b600080fd5b600060408284031215610e3657610e35610e1b565b5b81905092915050565b600060208284031215610e5557610e54610e11565b5b600082013567ffffffffffffffff811115610e7357610e72610e16565b5b610e7f84828501610e20565b91505092915050565b600060408284031215610e9e57610e9d610e1b565b5b81905092915050565b600060408284031215610ebd57610ebc610e11565b5b6000610ecb84828501610e88565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f2b82610f00565b9050919050565b610f3b81610f20565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f7b578082015181840152602081019050610f60565b60008484015250505050565b6000601f19601f8301169050919050565b6000610fa382610f41565b610fad8185610f4c565b9350610fbd818560208601610f5d565b610fc681610f87565b840191505092915050565b610fda81610ddd565b82525050565b6000608083016000830151610ff86000860182610f32565b50602083015161100b6020860182610f32565b50604083015184820360408601526110238282610f98565b91505060608301516110386060860182610fd1565b508091505092915050565b600061104f8383610fe0565b905092915050565b6000602082019050919050565b600061106f82610ed4565b6110798185610edf565b93508360208202850161108b85610ef0565b8060005b858110156110c757848403895281516110a88582611043565b94506110b383611057565b925060208a0199505060018101905061108f565b50829750879550505050505092915050565b600060a08301600083015184820360008601526110f68282611064565b915050602083015161110b6020860182610fd1565b50604083015161111e6040860182610fd1565b5060608301516111316060860182610fd1565b5060808301516111446080860182610fd1565b508091505092915050565b6000602082019050818103600083015261116981846110d9565b905092915050565b61117a81610f20565b811461118557600080fd5b50565b60008135905061119781611171565b92915050565b6000602082840312156111b3576111b2610e11565b5b60006111c184828501611188565b91505092915050565b600082825260208201905092915050565b7f43616e6e6f742073656e6420746f207a65726f20616464726573730000000000600082015250565b6000611211601b836111ca565b915061121c826111db565b602082019050919050565b6000602082019050818103600083015261124081611204565b9050919050565b7f43616e6e6f742073656e64206b75646f7320746f20796f757273656c66000000600082015250565b600061127d601d836111ca565b915061128882611247565b602082019050919050565b600060208201905081810360008301526112ac81611270565b9050919050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126112df576112de6112b3565b5b80840192508235915067ffffffffffffffff821115611301576113006112b8565b5b60208301925060018202360383131561131d5761131c6112bd565b5b509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061139b57607f821691505b6020821081036113ae576113ad611354565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026114167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826113d9565b61142086836113d9565b95508019841693508086168417925050509392505050565b6000819050919050565b600061145d61145861145384610ddd565b611438565b610ddd565b9050919050565b6000819050919050565b61147783611442565b61148b61148382611464565b8484546113e6565b825550505050565b600090565b6114a0611493565b6114ab81848461146e565b505050565b5b818110156114cf576114c4600082611498565b6001810190506114b1565b5050565b601f821115611514576114e5816113b4565b6114ee846113c9565b810160208510156114fd578190505b611511611509856113c9565b8301826114b0565b50505b505050565b600082821c905092915050565b600061153760001984600802611519565b1980831691505092915050565b60006115508383611526565b9150826002028217905092915050565b61156982610f41565b67ffffffffffffffff81111561158257611581611325565b5b61158c8254611383565b6115978282856114d3565b600060209050601f8311600181146115ca57600084156115b8578287015190505b6115c28582611544565b86555061162a565b601f1984166115d8866113b4565b60005b82811015611600578489015182556001820191506020850194506020810190506115db565b8683101561161d5784890151611619601f891682611526565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061166c82610ddd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361169e5761169d611632565b5b600182019050919050565b82818337600083830152505050565b60006116c483856111ca565b93506116d18385846116a9565b6116da83610f87565b840190509392505050565b600060208201905081810360008301526117008184866116b8565b90509392505050565b7f506167652073697a65206d7573742062652067726561746572207468616e2030600082015250565b600061173f6020836111ca565b915061174a82611709565b602082019050919050565b6000602082019050818103600083015261176e81611732565b9050919050565b600061178082610ddd565b915061178b83610ddd565b92508282019050808211156117a3576117a2611632565b5b92915050565b60006117b482610ddd565b91506117bf83610ddd565b92508282039050818111156117d7576117d6611632565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061181782610ddd565b915061182283610ddd565b925082611832576118316117dd565b5b828204905092915050565b600061184882610ddd565b915061185383610ddd565b925082820261186181610ddd565b9150828204841483151761187857611877611632565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212207fd2246b10ed771b8d9cdc9f2d5f8eae305902eaa20054488e791b5895589f1364736f6c63430008140033";

type KudosConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KudosConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Kudos__factory extends ContractFactory {
  constructor(...args: KudosConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Kudos & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Kudos__factory {
    return super.connect(runner) as Kudos__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KudosInterface {
    return new Interface(_abi) as KudosInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Kudos {
    return new Contract(address, _abi, runner) as unknown as Kudos;
  }
}
